<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="postMapper">
	<!-- namespace 속성 : 현재 공간(영역)에 대한 이름, 반드시 지정! -->
	<!-- mapper is sql -->
	
	<!-- 
		* resultMap 태그?
		- 자바 객체의 필드 명과 컬럼명이 다를 경우, 값을 어디에 세팅할지 작성
		- type : 연결할 VO 객채의 타입(패지키+클래스명 or 별칭) 별칭은 mybatis-config.xml 에서 지정
		- id : resultMap을 식별할 이름
	
	-->
	
	<resultMap type="Post" id="post_rm">
		
		<!-- PK 컬럼은 id로 -->
		<id property="postNo" column="POST_NO" />
		
		<!-- 나머지 컬럼은 result로 작성 -->
		<result property="memberNo" column="MEMBER_NO" />
		<result property="groupNo" column="GROUP_NO" />
		<result property="postContent" column="POST_CONTENT" />
		<result property="replyYN" column="REPLY_YN" />
		<result property="postDate" column="POST_DATE" />
		<result property="editDate" column="EDIT_DATE" />
		<result property="informYN" column="INFORM_YN" />
		<result property="postDelYN" column="POST_DEL_YN" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberImage" column="MEMBER_IMG" />
		<result property="replyCount" column="REPLY_COUNT" />
		<result property="likeCount" column="LIKE_COUNT" />
		<result property="postView" column="POST_VIEW" />
			
			<collection property="replyList"
			javaType="java.util.ArrayList" ofType="Reply"
			select="selectReplyList"
			column="POST_NO"/>
		
	</resultMap>
	
	<!-- 댓글 rm -->
	<resultMap type="Reply" id="reply_rm">
		<id property="replyNo" column="REPLY_NO" />
		<result property="replyDelYN" column="REPLY_DEL_YN" />
		<result property="replyDate" column="REPLY_DATE" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="postNo" column="POST_NO" />
		<result property="parentNo" column="PARENT_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberImage" column="MEMBER_IMG" />
	</resultMap>
	
	
	<!-- 게시글 수 조회 -->
	<select id="getPostCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*) FROM POST
		WHERE GROUP_NO = #{groupNo}
		AND POST_DEL_YN = 'N'
	</select>
	
	<!-- 게시글 조회 -->
	<select id="selectBoardDetail"  resultMap="post_rm">
		SELECT POST_NO, MEMBER_NAME, POST_CONTENT,
			<![CDATA[
			CASE  
		      WHEN SYSDATE - POST_DATE < 1/24/60
		      THEN FLOOR( (SYSDATE - POST_DATE) * 24 * 60 * 60 ) || '초 전'
		      WHEN SYSDATE - POST_DATE < 1/24
		      THEN FLOOR( (SYSDATE - POST_DATE) * 24 * 60) || '분 전'
		      WHEN SYSDATE - POST_DATE < 1
		      THEN FLOOR( (SYSDATE - POST_DATE) * 24) || '시간 전'
		      ELSE TO_CHAR(POST_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI')
		   END POST_DATE,
			CASE  
		      WHEN SYSDATE - EDIT_DATE < 1/24/60
		      THEN FLOOR( (SYSDATE - EDIT_DATE) * 24 * 60 * 60 ) || '초 전'
		      WHEN SYSDATE - EDIT_DATE < 1/24
		      THEN FLOOR( (SYSDATE - EDIT_DATE) * 24 * 60) || '분 전'
		      WHEN SYSDATE - EDIT_DATE < 1
		      THEN FLOOR( (SYSDATE - EDIT_DATE) * 24) || '시간 전'
		      ELSE TO_CHAR(EDIT_DATE, 'YYYY-MM-DD')
		   END EDIT_DATE,
		   ]]>
			   (SELECT COUNT(*) FROM REPLY R
				WHERE R.POST_NO = P.POST_NO) REPLY_COUNT,
				(SELECT COUNT(*) FROM POST_LIKE L
				WHERE L.POST_NO = P.POST_NO) LIKE_COUNT,
				(SELECT COUNT(*) FROM POST_VIEW V
				WHERE V.POST_NO = P.POST_NO)POST_VIEW,
				(SELECT MEMBER_IMG_PATH || MEMBER_IMG_RENAME 
				FROM MEMBER_IMG MI
				WHERE MI.MEMBER_NO = P.MEMBER_NO) MEMBER_IMG
		FROM POST P
		JOIN MEMBER M ON(P.MEMBER_NO = M.MEMBER_NO)
		WHERE GROUP_NO = #{groupNo}
		AND POST_DEL_YN = 'N'
		ORDER BY POST_NO DESC
	</select>
	
	<!-- 게시글 상세조회 -->
	<select id="selectPostDetail" resultMap="post_rm">
		SELECT POST_NO, MEMBER_NAME, POST_CONTENT, P.MEMBER_NO,
			TO_CHAR(POST_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') POST_DATE,
			TO_CHAR(EDIT_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') EDIT_DATE,
			(SELECT COUNT(*) FROM REPLY R
			WHERE R.POST_NO = P.POST_NO) REPLY_COUNT,
			(SELECT COUNT(*) FROM POST_LIKE L
			WHERE L.POST_NO = P.POST_NO) LIKE_COUNT,
			(SELECT COUNT(*) FROM POST_VIEW V
			WHERE V.POST_NO = P.POST_NO)POST_VIEW,
			(SELECT MEMBER_IMG_PATH || MEMBER_IMG_RENAME 
			FROM MEMBER_IMG MI
			WHERE MI.MEMBER_NO = P.MEMBER_NO) MEMBER_IMG
		FROM POST P
		JOIN MEMBER M ON(P.MEMBER_NO = M.MEMBER_NO)
		WHERE POST_NO = #{postNo}
		AND POST_DEL_YN = 'N'
	
	</select>
	
	<select id="selectReplyList" resultMap="reply_rm">
		SELECT LEVEL, C.* FROM
			(SELECT REPLY_NO, REPLY_CONTENT, 
				TO_CHAR(REPLY_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분"') REPLY_DATE,
				POST_NO, R.MEMBER_NO, MEMBER_NAME,
				(SELECT MEMBER_IMG_PATH || MEMBER_IMG_RENAME 
				FROM MEMBER_IMG MI
				WHERE MI.MEMBER_NO = R.MEMBER_NO) MEMBER_IMG,
				PARENT_NO, REPLY_DEL_YN
			FROM REPLY R
			JOIN MEMBER M ON(R.MEMBER_NO = M.MEMBER_NO)
			WHERE POST_NO = #{postNo}) C
		START WITH PARENT_NO IS NULL
		CONNECT BY PRIOR REPLY_NO = PARENT_NO
		ORDER SIBLINGS BY REPLY_NO
	</select>
	
	<!-- 좋아요 체크 -->
	<select id="postLikeCheck" resultType="_int">
		SELECT COUNT(*) FROM POST_LIKE
		WHERE POST_NO = #{postNo}
		AND MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 좋아요 -->
	<insert id="postLikeUp">
		INSERT INTO POST_LIKE VALUES(#{postNo},#{memberNo})
	</insert>
	
	<delete id="postLikeDown">
		DELETE FROM POST_LIKE
		WHERE POST_NO = #{postNo}
		AND MEMBER_NO =	#{memberNo}
	</delete>
	
	<!-- 회원 1명 조회여부 확인 -->
	<select id="selectViewCount" resultType="_int">
		SELECT COUNT(*)
		FROM POST_VIEW
		WHERE POST_NO = #{postNo}
		AND MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 조회 목록 삽입 -->
	<insert id="insertPostView">
		INSERT INTO POST_VIEW 
		VALUES(#{postNo}, #{memberNo})
	</insert>

	<!-- 게시글 삽입 -->
	<insert id="postWrite" parameterType="Post" useGeneratedKeys="true">
		<selectKey keyProperty="postNo" resultType="_int" order="BEFORE">
				SELECT SEQ_POST_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO POST VALUES
		(#{postNo}, #{groupNo}, #{memberNo}, #{postContent}, DEFAULT, DEFAULT, NULL, DEFAULT, DEFAULT)
	</insert>

	<!-- 이미지테이블에 삽입 -->
	<insert id="insertPostImages" parameterType="list">
		INSERT INTO POST_IMG
		SELECT SEQ_IMG_NO.NEXTVAL IMG_NO, A.*FROM
		<foreach collection="list" item="img" open="(" close=") A" separator="UNION ALL">
			SELECT
				#{img.postNo} POST_NO,
				#{img.imageRename} IMG_RENAME,
				#{img.imagePath} IMG_PATH
			FROM DUAL
		</foreach>
	</insert>
	
	<!-- 게시물 삭제 -->
	<update id="deletePost">
		UPDATE POST SET 
		POST_DEL_YN ='Y' WHERE POST_NO=#{postNo}
	</update>
	
	<!-- 게시글만 조회 -->
	<select id="selectPostContent" resultMap="post_rm">
		SELECT POST_CONTENT FROM POST WHERE POST_NO = #{postNo}
	</select>
	
	<!-- 게시글의 모든 이미지를 조회 -->
	<select id="selectPostImageList" resultType="string">
		SELECT IMG_RENAME FROM POST_IMG
	</select>
	
	
</mapper>
