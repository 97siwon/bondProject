<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="adminMapper">
	
	<!-- MemberVO -->
	<resultMap type="Member" id="member_rm">
		<id property="memberNo" column="MEMBER_NO" />
		
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberBirth" column="MEMBER_BIRTH" />
		<result property="memberTel" column="MEMBER_TEL" />
		<result property="authority" column="AUTHORITY" />
		<result property="memberStatus" column="MEMBER_STATUS" />
		<result property="signUpDate" column="SIGNUP_DATE" />
		<result property="delDate" column="DEL_DATE" />
	</resultMap>
	
	<!-- GroupVO -->
	<resultMap type="Group" id="group_rm">
		<id property="groupNo" column="GROUP_NO" />
		
		<result property="topicCode" column="TOPIC_CODE" />
		<result property="groupName" column="GROUP_NAME" />
		<result property="groupDate" column="GROUP_DATE" />
		<result property="groupComment" column="GROUP_COMMENT" />
		<result property="openYN" column="OPEN_YN" />
		<result property="groupStatus" column="GROUP_STATUS" />
		<result property="topicName" column="TOPIC_NAME" />
		<result property="leaderName" column="LEADER_NAME" />
		<result property="memberCount" column="MEMBER_COUNT" />
		<result property="postCount" column="POST_COUNT" />
	</resultMap>
	
	<!-- Post VO -->
	<resultMap type="Post" id="post_rm">
		
		<id property="postNo" column="POST_NO" />
		
		<result property="memberNo" column="MEMBER_NO" />
		<result property="groupNo" column="GROUP_NO" />
		<result property="groupName" column="GROUP_NAME" />
		<result property="postContent" column="POST_CONTENT" />
		<result property="postView" column="POST_VIEW" />
		<result property="replyYN" column="REPLY_YN" />
		<result property="postDate" column="POST_DATE" />
		<result property="editDate" column="EDIT_DATE" />
		<result property="informYN" column="INFORM_YN" />
		<result property="postDelYN" column="POST_DEL_YN" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberImage" column="MEMBER_IMG" />
	</resultMap>
	
	<!-- Report VO -->
	<resultMap type="Report" id="report_rm">
		<id property="reportNo" column="REPORT_NO" />
		
		<result property="reasonCode" column="REASON_CODE" />
		<result property="typeCode" column="TYPE_CODE" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="targetNo" column="TARGET_NO" />
		<result property="reportDate" column="REPORT_DATE" />
		<result property="resultCode" column="RESULT_CODE" />
		<result property="processYN" column="PROCESS_YN" />
		<result property="processDate" column="PROCESS_DATE" />
		<result property="expireDate" column="EXPIRE_DATE" />
		<result property="expireYN" column="EXPIRE_YN" />
		
		<result property="memberName" column="MEMBER_NAME" />
		<result property="groupName" column="GROUP_NAME" />
		<result property="postContent" column="POST_CONTENT" />
		
		<result property="reasonDetails" column="REASON_DETAILS" />

		<result property="typeDetails" column="TYPE_DETAILS" />

		<result property="resultDetails" column="RESULT_DETAILS" />
		
		<result property="targetName" column="TARGET_NAME" />
	
	</resultMap>
	
	<!-- 회원 목록 개수 조회 -->
	<select id="getMemberListCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE ${condition}
	</select>
	
	<!-- 회원 목록 조회 -->
	<select id="selectMemberList" parameterType="string" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NAME, SIGNUP_DATE, MEMBER_STATUS
		FROM "MEMBER"
		WHERE ${condition}
	</select>

	<!-- 회원 상세 조회 -->
	<select id="selectMemberDetail" parameterType="_int" resultMap="member_rm">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NAME, MEMBER_TEL, MEMBER_BIRTH, MEMBER_STATUS, SIGNUP_DATE, DEL_DATE
		FROM "MEMBER"
		WHERE MEMBER_NO = #{inputMemberNo}
	</select>
	
	<!-- 모임 목록 개수 조회 -->
	<select id="getGroupListCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM "GROUP"
		WHERE ${condition}
	</select> 
	
	<!-- 모임 목록 조회 -->
	<select id="selectGroupList" parameterType="string" resultMap="group_rm">
		SELECT GROUP_NO, TOPIC_NAME, GROUP_NAME, GROUP_DATE, OPEN_YN, GROUP_STATUS
		FROM "GROUP"
		JOIN "GROUP_TOPIC" USING(TOPIC_CODE)
		WHERE ${condition}
		<!-- GROUP_NAME LIKE '%' || #{keyword} || '%' -->
	</select>
	
	<!-- 모임 상세 조회 -->
	<select id="selectGroupDetail" parameterType="_int" resultMap="group_rm">
		SELECT GROUP_NO, TOPIC_NAME, GROUP_NAME, OPEN_YN, GROUP_STATUS, GROUP_COMMENT, GROUP_DATE,
				-- 리더 이름 --
				(SELECT MEMBER_NAME
				 FROM MEMBER_JOIN J
				 JOIN "MEMBER" USING(MEMBER_NO)
				 WHERE LEADER_YN = 'Y'
				 AND J.GROUP_NO = G.GROUP_NO) LEADER_NAME,
				 -- 회원 수 --
				(SELECT COUNT(*)
				 FROM MEMBER_JOIN J
				 WHERE JOIN_STATUS = 0
				 AND J.GROUP_NO = G.GROUP_NO) MEMBER_COUNT,
				 -- 게시글 수 --
				(SELECT COUNT(*)
				 FROM "POST" P
				 WHERE P.GROUP_NO = G.GROUP_NO) POST_COUNT
		FROM "GROUP" G
		JOIN "GROUP_TOPIC" USING(TOPIC_CODE)
		WHERE G.GROUP_NO = #{inputGroupNo}
	</select>
	
	<!-- 회원 / 모임 상세 조회 시 신고 기록 개수 조회 -->
	<select id="getReportListCount_detail" parameterType="map" resultType="_int">
		SELECT COUNT(*)
		FROM "REPORT"
		WHERE TARGET_NO = ${targetNo}
		AND TYPE_CODE = ${targetType}
		AND RESULT_CODE IN (2, 3, 4)
	</select>
	
	<!-- 회원 / 모임 상세 조회 시 신고 내역 목록 조회 -->
	<select id="getReportList_detail" parameterType="map" resultMap="report_rm">
		SELECT REPORT_NO, MEMBER_NAME, REASON_DETAILS, RESULT_DETAILS
		FROM "REPORT" R
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "REPORT_REASON" USING(REASON_CODE)
		JOIN "REPORT_RESULT" USING(RESULT_CODE)
		WHERE TARGET_NO = ${targetNo}
		AND R.TYPE_CODE = ${targetType}
		ORDER BY REPORT_NO DESC
	</select>
	
	<!-- 게시글 개수 조회 -->
	<select id="getPostListCount" parameterType="string" resultType="_int">
		SELECT COUNT(*)
		FROM "POST"
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "GROUP" USING(GROUP_NO)
		WHERE ${condition}
	</select>
	
	<!-- 게시글 목록 조회 -->
	<select id="selectPostList" parameterType="string" resultMap="post_rm">
		SELECT POST_NO, MEMBER_NAME, GROUP_NAME, POST_DEL_YN,
		       TO_CHAR(POST_DATE, 'YYYY-MM-DD HH24:MI:SS') POST_DATE,
		       SUBSTR(POST_CONTENT, 0, 30) POST_CONTENT
		FROM "POST"
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "GROUP" USING(GROUP_NO)
		WHERE ${condition}
		ORDER BY POST_NO
	</select>
	
	<!-- 게시글 상세 조회 -->
	<select id="selectPostDetail" parameterType="_int" resultMap="post_rm">
		SELECT POST_NO, GROUP_NO, GROUP_NAME, POST_DEL_YN, 
		       MEMBER_NO, MEMBER_NAME, 
		       TO_CHAR(POST_DATE, 'YYYY-MM-DD HH24:MI:SS') POST_DATE,
		       POST_CONTENT
		FROM "POST"
		JOIN "MEMBER" USING(MEMBER_NO)
		JOIN "GROUP" USING(GROUP_NO)
		WHERE POST_NO = ${inputPostNo}
	</select>
	
	<!-- 신고 목록 개수 조회 -->
	<select id="getReportListCount" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM (
			SELECT REPORT_NO,
					CASE 
						WHEN TYPE_CODE = 1 THEN (SELECT MEMBER_NAME FROM "MEMBER" WHERE MEMBER_NO = TARGET_NO)
						WHEN TYPE_CODE = 2 THEN (SELECT GROUP_NAME FROM "GROUP" WHERE GROUP_NO = TARGET_NO)
						WHEN TYPE_CODE = 3 THEN (SELECT POST_CONTENT FROM "POST" WHERE POST_NO = TARGET_NO)
					END TARGET_NAME
			FROM "REPORT"
		) WHERE ${condition}
	</select>
	
	<!-- 신고 목록 조회 -->
	<select id="selectReportList" parameterType="string" resultMap="report_rm">
		SELECT * FROM (
			SELECT REPORT_NO, MEMBER_NAME, TYPE_DETAILS,
					CASE 
						WHEN R.TYPE_CODE = 1 THEN (SELECT MEMBER_NAME FROM "MEMBER" WHERE MEMBER_NO = TARGET_NO)
						WHEN R.TYPE_CODE = 2 THEN (SELECT GROUP_NAME FROM "GROUP" WHERE GROUP_NO = TARGET_NO)
						WHEN R.TYPE_CODE = 3 THEN (SELECT POST_CONTENT FROM "POST" WHERE POST_NO = TARGET_NO)
					END TARGET_NAME,
					TARGET_NO, 
					TO_CHAR(REPORT_DATE, 'YYYY-MM-DD HH24:MI:SS') REPORT_DATE,
					PROCESS_YN,
					TO_CHAR(PROCESS_DATE, 'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE
			FROM "REPORT" R
			JOIN "REPORT_TYPE" RT ON (R.TYPE_CODE = RT.TYPE_CODE)
			JOIN "MEMBER" USING(MEMBER_NO)
			ORDER BY REPORT_NO DESC
		) WHERE ${condition}
	</select>
	
	<!-- 신고 내역 상세 조회 -->
	<select id="selectReportDetail" parameterType="_int" resultMap="report_rm">
		SELECT REPORT_NO, MEMBER_NAME, TYPE_DETAILS, TARGET_NO, 
				CASE 
					WHEN R.TYPE_CODE = 1 THEN (SELECT MEMBER_NAME FROM "MEMBER" WHERE MEMBER_NO = TARGET_NO)
					WHEN R.TYPE_CODE = 2 THEN (SELECT GROUP_NAME FROM "GROUP" WHERE GROUP_NO = TARGET_NO)
					WHEN R.TYPE_CODE = 3 THEN (SELECT POST_CONTENT FROM "POST" WHERE POST_NO = TARGET_NO)
				END TARGET_NAME,
				TARGET_NO, 
				TO_CHAR(REPORT_DATE, 'YYYY-MM-DD HH24:MI:SS') REPORT_DATE,
				DECODE(PROCESS_YN, 'Y', '완료', 'N', '접수') PROCESS_YN,
				TO_CHAR(PROCESS_DATE, 'YYYY-MM-DD HH24:MI:SS') PROCESS_DATE,
				EXPIRE_YN,
				TO_CHAR(EXPIRE_DATE, 'YYYY-MM-DD HH24:MI:SS' ) EXPIRE_DATE,
				REASON_DETAILS,
				RESULT_DETAILS
		FROM "REPORT" R
		JOIN "REPORT_TYPE" RT ON (R.TYPE_CODE = RT.TYPE_CODE)
		JOIN "REPORT_REASON" USING (REASON_CODE)
		JOIN "REPORT_RESULT" USING (RESULT_CODE)
		JOIN "MEMBER" USING(MEMBER_NO)
		WHERE REPORT_NO = ${reportNo}
	</select>
	
	<!-- 대상의 피신고 기록 조회 -->
	<select id="getReportRecordCount" parameterType="Report" resultType="_int">
		SELECT COUNT(*)
		FROM "REPORT"
		WHERE TYPE_CODE = 1
		AND TARGET_NO = 10
		AND RESULT_CODE NOT IN (0,1)
	</select>
	
	<!-- 신고 : 결과 코드 업데이트  -->
	<update id="updateResultCode">
		UPDATE "REPORT" SET
		RESULT_CODE = ${resultCode},
		PROCESS_YN = 'Y',
		PROCESS_DATE = SYSDATE
		WHERE REPORT_NO = ${reportNo}
	</update>
	
	<!-- 신고 : 정지 기간 업데이트 -->
	<update id="updateExpireDate">
		UPDATE "REPORT" SET
		EXPIRE_DATE = CASE
			  	  		WHEN RESULT_CODE = 1 THEN NULL
			  	  		WHEN RESULT_CODE = 2 THEN SYSDATE + 7
			  	  		WHEN RESULT_CODE = 3 THEN SYSDATE + 30
			  	  		WHEN RESULT_CODE = 4 THEN TO_DATE('9999.12.31')
			  	  		WHEN RESULT_CODE = 5 THEN NULL
			  		  END
		WHERE REPORT_NO = ${reportNo}
	</update>
	
	<!-- 스케줄러를 이용한 신고 테이블 자동 업데이트 -->
	<update id="autoReportUpdate">
		UPDATE "REPORT" SET
		EXPIRE_YN = 'Y'
		<![CDATA[
		WHERE RESULT_CODE != 0
		AND PROCESS_YN = 'Y'
		AND EXPIRE_DATE < SYSDATE
		AND EXPIRE_YN = 'N'
		]]>
	</update>
	
</mapper>
